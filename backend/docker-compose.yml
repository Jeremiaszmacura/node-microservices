version: '3.8'

services:

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DATABASE_ADMIN_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_ADMIN_PASSWORD}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
    env_file: 
    - .env
    ports:
      - '27017-27019:27017-27019'
    volumes: 
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongo-data:/data/db
    networks:
      - node-network
    restart: always

  mongo-express:
    image: mongo-express
    container_name: mongo-web-admin
    ports:
      - 8080:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=${DATABASE_PORT}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=${DATABASE_NAME}
      - ME_CONFIG_MONGODB_AUTH_USERNAME=${DATABASE_USERNAME}
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=${DATABASE_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    env_file: 
      - .env
    networks:
      - node-network
    depends_on:
      - mongodb
    restart: always

  node-app:
    image: node-app
    container_name: node-app
    build:
      context: .
      dockerfile: ./Dockerfile
    command: sh -c "/workspace/server/sleep.sh && exec node src/server.js"
    ports:
      - 4000:4000
      - 9229:9229
    env_file: .env
    environment:
      APP_PORT: ${APP_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_DOCKER_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - .:/workspace/server
      - /workspace/server/node_modules
    networks:
      - node-network
    restart: on-failure
    depends_on:
      - mongodb

networks:
    node-network:
      driver: bridge
      name: node-network